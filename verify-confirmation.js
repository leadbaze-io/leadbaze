// ==============================================
// SCRIPT PARA VERIFICAR CONFIRMA√á√ÉO
// ==============================================

import { createClient } from '@supabase/supabase-js'

// Configura√ß√£o do Supabase com Service Role Key
const supabaseUrl = 'https://lsvwjyhnnzeewuuuykmb.supabase.co'
const supabaseServiceKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImxzdndqeWhubnplZXd1dXV5a21iIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1NDMzNzg1NiwiZXhwIjoyMDY5OTEzODU2fQ.XeXm2_L1IBhytbQPpEnmUgygv22TOcu8SCWelHcW3Mk'

const supabase = createClient(supabaseUrl, supabaseServiceKey)

async function verifyConfirmation() {
  const userId = '1a79a6e6-c3f4-4d7b-8b7d-53876e0ec59b' // ID do usu√°rio de teste
  const testEmail = 'test-confirm-1757980144322@example.com'
  const testPassword = 'TestPassword123!'
  
  console.log('üîç Verificando confirma√ß√£o de email...')
  console.log('=' .repeat(60))

  try {
    // 1. Verificar status do usu√°rio
    console.log('\n1Ô∏è‚É£ Verificando status do usu√°rio...')
    
    const { data: userData, error: userError } = await supabase.auth.admin.getUserById(userId)

    if (userError) {
      console.log('‚ùå Erro ao consultar usu√°rio:', userError.message)
      return
    }

    if (!userData || !userData.user) {
      console.log('‚ùå Usu√°rio n√£o encontrado')
      return
    }

    const user = userData.user
    console.log('‚úÖ Usu√°rio encontrado:')
    console.log('   üìß Email:', user.email)
    console.log('   üìß Email confirmado:', user.email_confirmed_at ? 'Sim' : 'N√£o')
    console.log('   üîí Senha:', user.encrypted_password ? 'SIM' : 'N√ÉO')
    console.log('   üìÖ √öltima atualiza√ß√£o:', user.updated_at)

    // 2. Testar login
    console.log('\n2Ô∏è‚É£ Testando login...')
    
    const { data: loginData, error: loginError } = await supabase.auth.signInWithPassword({
      email: testEmail,
      password: testPassword
    })

    if (loginError) {
      console.log('‚ùå Erro no login:', loginError.message)
      console.log('   üîç Poss√≠veis causas:')
      console.log('      1. Email n√£o confirmado')
      console.log('      2. Senha incorreta')
      console.log('      3. Senha n√£o salva')
    } else if (loginData.user) {
      console.log('‚úÖ Login realizado com sucesso!')
      console.log('   üÜî User ID:', loginData.user.id)
      console.log('   üéâ CONFIRMA√á√ÉO FUNCIONANDO!')
    }

    // 3. Resultado final
    console.log('\n3Ô∏è‚É£ Resultado final:')
    
    if (user.email_confirmed_at && user.encrypted_password) {
      console.log('   üéâ SUCESSO COMPLETO!')
      console.log('   ‚úÖ Email confirmado')
      console.log('   ‚úÖ Senha salva')
      console.log('   ‚úÖ Sistema funcionando')
    } else if (user.email_confirmed_at) {
      console.log('   ‚ö†Ô∏è  PARCIALMENTE FUNCIONANDO')
      console.log('   ‚úÖ Email confirmado')
      console.log('   ‚ùå Senha n√£o salva')
      console.log('   üîß Problema no fluxo de confirma√ß√£o')
    } else {
      console.log('   ‚ùå AINDA N√ÉO FUNCIONANDO')
      console.log('   ‚ùå Email n√£o confirmado')
      console.log('   ‚ùå Senha n√£o salva')
      console.log('   üìß Confirme o email primeiro')
    }

  } catch (error) {
    console.error('‚ùå Erro geral:', error.message)
  }
}

// Executar script
verifyConfirmation()

