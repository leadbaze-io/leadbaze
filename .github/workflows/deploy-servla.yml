name: üöÄ Deploy LeadBaze na Servla

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Ambiente de deploy'
        required: true
        default: 'production'
        type: choice
        options:
        - production
        - staging

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 1
        
    - name: üîß Fix origin/HEAD
      run: git remote set-head origin -a
      
    - name: üü¢ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: üì¶ Install dependencies
      run: npm ci
      
    - name: üîç Type check
      run: npm run type-check
      
    - name: üèóÔ∏è Build application
      run: npm run build
      env:
        VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
        VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
        VITE_N8N_WEBHOOK_URL: ${{ secrets.VITE_N8N_WEBHOOK_URL }}
        VITE_APP_ENV: production
        VITE_DEBUG_MODE: false
        
    - name: üìÅ Create deployment package
      run: |
        tar -czf leadflow-deploy.tar.gz dist/ deploy-leadflow-servla.sh nginx-simple.conf env.example
        
    - name: üîë Setup SSH key
      run: |
        echo "üîç Configurando chave SSH..."
        mkdir -p ~/.ssh
        echo "üìù Criando arquivo de chave..."
        echo "${{ secrets.SERVLA_SSH_KEY }}" > ~/.ssh/servla_key
        echo "üîê Configurando permiss√µes..."
        chmod 600 ~/.ssh/servla_key
        echo "üîç Verificando arquivo..."
        ls -la ~/.ssh/
        echo "üìã Primeiras linhas da chave:"
        head -3 ~/.ssh/servla_key
        echo "üîó Adicionando host key..."
        ssh-keyscan -H ${{ secrets.SERVLA_HOST }} >> ~/.ssh/known_hosts
        echo "‚úÖ Setup SSH conclu√≠do!"
        
    - name: üöÄ Deploy to Servla
      run: |
        # Criar diret√≥rio tempor√°rio
        ssh -i ~/.ssh/servla_key -p ${{ secrets.SERVLA_PORT }} ${{ secrets.SERVLA_USERNAME }}@${{ secrets.SERVLA_HOST }} "
          mkdir -p /tmp/leadflow-deploy
          cd /tmp/leadflow-deploy
        "
        
        # Enviar arquivo de deploy
        scp -i ~/.ssh/servla_key -P ${{ secrets.SERVLA_PORT }} leadflow-deploy.tar.gz ${{ secrets.SERVLA_USERNAME }}@${{ secrets.SERVLA_HOST }}:/tmp/leadflow-deploy/
        
                 # Executar deploy
         ssh -i ~/.ssh/servla_key -p ${{ secrets.SERVLA_PORT }} ${{ secrets.SERVLA_USERNAME }}@${{ secrets.SERVLA_HOST }} "
           cd /tmp/leadflow-deploy
           tar -xzf leadflow-deploy.tar.gz
           chmod +x deploy-leadflow-servla.sh
           
           # Copiar arquivos do build diretamente para o diret√≥rio de deploy
           echo 'üìã Copiando arquivos do build...'
           sudo mkdir -p /var/www/leadflow
           sudo cp -r dist/* /var/www/leadflow/
           sudo chown -R www-data:www-data /var/www/leadflow
           sudo chmod -R 755 /var/www/leadflow
           echo '‚úÖ Arquivos copiados para /var/www/leadflow'
           
           # Configurar Nginx
           echo 'üåê Configurando Nginx...'
           sudo cp nginx-simple.conf /etc/nginx/sites-enabled/leadflow
           if sudo nginx -t && sudo systemctl restart nginx; then
             echo '‚úÖ Nginx configurado e reiniciado'
           else
             echo '‚ùå Erro ao configurar Nginx'
             exit 1
           fi
           
                      # Verificar se a aplica√ß√£o est√° funcionando
           if [ -f '/var/www/leadflow/index.html' ]; then
             echo '‚úÖ Deploy executado com sucesso!'
           else
             echo '‚ùå Deploy falhou'
             exit 1
           fi
          
          cd /
          rm -rf /tmp/leadflow-deploy
        "
          
    - name: ‚úÖ Deploy verification
      run: |
        # Verificar se a aplica√ß√£o est√° rodando
        ssh -i ~/.ssh/servla_key -p ${{ secrets.SERVLA_PORT }} ${{ secrets.SERVLA_USERNAME }}@${{ secrets.SERVLA_HOST }} "
          if curl -s https://leadbaze.io/health | grep -q 'healthy'; then
            echo '‚úÖ Deploy successful!'
            echo 'üåê Site dispon√≠vel em: https://leadbaze.io'
            exit 0
          else
            echo '‚ùå Deploy failed!'
            exit 1
          fi
        "

