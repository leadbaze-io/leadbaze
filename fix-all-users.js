// ==============================================
// SCRIPT PARA CORRIGIR TODOS OS USU√ÅRIOS
// ==============================================

import { createClient } from '@supabase/supabase-js'

// Configura√ß√£o do Supabase com Service Role Key
const supabaseUrl = 'https://lsvwjyhnnzeewuuuykmb.supabase.co'
const supabaseServiceKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImxzdndqeWhubnplZXd1dXV5a21iIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1NDMzNzg1NiwiZXhwIjoyMDY5OTEzODU2fQ.XeXm2_L1IBhytbQPpEnmUgygv22TOcu8SCWelHcW3Mk'

const supabase = createClient(supabaseUrl, supabaseServiceKey)

async function fixAllUsers() {
  console.log('üîß Corrigindo todos os usu√°rios...')
  console.log('=' .repeat(60))

  try {
    // 1. Listar todos os usu√°rios
    console.log('\n1Ô∏è‚É£ Listando todos os usu√°rios...')
    
    const { data: allUsers, error: allUsersError } = await supabase.auth.admin.listUsers({
      page: 1,
      perPage: 50
    })

    if (allUsersError) {
      console.log('‚ùå Erro ao listar usu√°rios:', allUsersError.message)
      return
    }

    if (!allUsers || !allUsers.users) {
      console.log('‚ùå Nenhum usu√°rio encontrado')
      return
    }

    console.log(`üìä Total de usu√°rios: ${allUsers.users.length}`)

    // 2. Identificar usu√°rios sem senha
    const usersWithoutPassword = allUsers.users.filter(user => 
      user.email_confirmed_at && !user.encrypted_password
    )

    console.log(`\n2Ô∏è‚É£ Usu√°rios sem senha: ${usersWithoutPassword.length}`)

    if (usersWithoutPassword.length === 0) {
      console.log('‚úÖ Todos os usu√°rios t√™m senha!')
      return
    }

    // 3. Corrigir cada usu√°rio
    console.log('\n3Ô∏è‚É£ Corrigindo usu√°rios...')
    
    for (const user of usersWithoutPassword) {
      console.log(`\nüîß Corrigindo: ${user.email}`)
      
      const { data: updateData, error: updateError } = await supabase.auth.admin.updateUserById(user.id, {
        password: 'TestPassword123!'
      })

      if (updateError) {
        console.log(`   ‚ùå Erro: ${updateError.message}`)
      } else {
        console.log(`   ‚úÖ Senha definida: TestPassword123!`)
      }
    }

    // 4. Verificar resultado
    console.log('\n4Ô∏è‚É£ Verificando resultado...')
    
    const { data: finalUsers, error: finalError } = await supabase.auth.admin.listUsers({
      page: 1,
      perPage: 50
    })

    if (finalError) {
      console.log('‚ùå Erro ao verificar usu√°rios:', finalError.message)
      return
    }

    const finalUsersWithoutPassword = finalUsers.users.filter(user => 
      user.email_confirmed_at && !user.encrypted_password
    )

    console.log(`üìä Usu√°rios sem senha ap√≥s corre√ß√£o: ${finalUsersWithoutPassword.length}`)

    if (finalUsersWithoutPassword.length === 0) {
      console.log('üéâ SUCESSO! Todos os usu√°rios foram corrigidos!')
    } else {
      console.log('‚ö†Ô∏è  Alguns usu√°rios ainda precisam de corre√ß√£o')
    }

    // 5. Listar credenciais
    console.log('\n5Ô∏è‚É£ Credenciais para login:')
    console.log('   üìß Email: [email do usu√°rio]')
    console.log('   üîê Senha: TestPassword123!')
    console.log('\n   Usu√°rios corrigidos:')
    usersWithoutPassword.forEach((user, index) => {
      console.log(`   ${index + 1}. ${user.email}`)
    })

  } catch (error) {
    console.error('‚ùå Erro geral:', error.message)
  }
}

// Executar script
fixAllUsers()

