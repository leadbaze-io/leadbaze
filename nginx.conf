server {
    listen 80;
    server_name _;
    root /var/www/leadflow/dist;
    index index.html;

    # Gzip compression (otimizado para HTML também)
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_proxied expired no-cache no-store private must-revalidate auth;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml+rss application/javascript application/json text/html;
    gzip_disable "msie6";

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    # Cache otimizado para assets estáticos
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        # Cache longo para assets com hash
        expires 1y;
        add_header Cache-Control "public, immutable, max-age=31536000";
        add_header Vary "Accept-Encoding";
        try_files $uri =404;
    }

    # HTML sempre sem cache para evitar problemas de roteamento
    location ~* \.html$ {
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
        add_header Vary "Accept-Encoding";
        gzip on;
        try_files $uri =404;
    }

    # CSS e JS específicos sem cache em desenvolvimento
    location ~* \.(css|js)$ {
        # Se o arquivo tem hash, pode fazer cache
        if ($uri ~* "-[a-f0-9]{8,}\.(css|js)$") {
            expires 1y;
            add_header Cache-Control "public, immutable, max-age=31536000";
        }
        # Se não tem hash, sem cache
        if ($uri !~* "-[a-f0-9]{8,}\.(css|js)$") {
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }
        try_files $uri =404;
    }

    # Handle React Router
    location / {
        try_files $uri $uri/ /index.html;
        # Sem cache para páginas SPA
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }

    # Backend API proxy
    location /api/ {
        proxy_pass http://localhost:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
    }

    # Health check
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}
