/**
 * =====================================================
 * SCRIPT DE VERIFICA√á√ÉO DO SISTEMA EST√ÅVEL
 * =====================================================
 * 
 * Este script verifica se todas as funcionalidades
 * principais est√£o funcionando corretamente.
 * 
 * Execute no console do navegador (F12) na p√°gina do disparador
 */

console.log('üîç [VERIFICA√á√ÉO] Iniciando verifica√ß√£o do sistema est√°vel...')

// Fun√ß√£o para verificar se elementos est√£o presentes
function verificarElementos() {
  console.log('üìã [VERIFICA√á√ÉO] Verificando elementos da interface...')
  
  const elementos = {
    'CampaignWizard': document.querySelector('[data-testid="campaign-wizard"]') || document.querySelector('.campaign-wizard'),
    'MessageStep': document.querySelector('#message-input'),
    'BulkButtons': document.querySelector('[data-testid="bulk-buttons"]') || document.querySelector('.bulk-operation-buttons'),
    'WhatsAppConnection': document.querySelector('[data-testid="whatsapp-connection"]') || document.querySelector('.whatsapp-connection'),
    'StatsCards': document.querySelectorAll('.stats-card'),
    'ListSelection': document.querySelector('[data-testid="list-selection"]') || document.querySelector('.list-selection')
  }
  
  let elementosEncontrados = 0
  let elementosTotal = Object.keys(elementos).length
  
  Object.entries(elementos).forEach(([nome, elemento]) => {
    if (elemento) {
      console.log(`‚úÖ [VERIFICA√á√ÉO] ${nome}: Encontrado`)
      elementosEncontrados++
    } else {
      console.log(`‚ùå [VERIFICA√á√ÉO] ${nome}: N√£o encontrado`)
    }
  })
  
  console.log(`üìä [VERIFICA√á√ÉO] Elementos encontrados: ${elementosEncontrados}/${elementosTotal}`)
  return elementosEncontrados === elementosTotal
}

// Fun√ß√£o para verificar logs do sistema
function verificarLogs() {
  console.log('üìù [VERIFICA√á√ÉO] Verificando logs do sistema...')
  
  // Verificar se h√° logs de WhatsApp
  const logsWhatsApp = console.log.toString().includes('[WHATSAPP]')
  console.log(`üì± [VERIFICA√á√ÉO] Logs WhatsApp: ${logsWhatsApp ? 'Presentes' : 'N√£o encontrados'}`)
  
  // Verificar se h√° logs de campanha
  const logsCampanha = console.log.toString().includes('[CAMPAIGN]')
  console.log(`üìã [VERIFICA√á√ÉO] Logs Campanha: ${logsCampanha ? 'Presentes' : 'N√£o encontrados'}`)
  
  return true // Sempre retorna true pois √© apenas informativo
}

// Fun√ß√£o para verificar funcionalidades JavaScript
function verificarFuncionalidades() {
  console.log('‚öôÔ∏è [VERIFICA√á√ÉO] Verificando funcionalidades JavaScript...')
  
  try {
    // Verificar se React est√° carregado
    const reactCarregado = typeof React !== 'undefined'
    console.log(`‚öõÔ∏è [VERIFICA√á√ÉO] React: ${reactCarregado ? 'Carregado' : 'N√£o carregado'}`)
    
    // Verificar se h√° erros no console
    const errosConsole = console.error.toString()
    console.log(`üö® [VERIFICA√á√ÉO] Erros no console: ${errosConsole ? 'Verificar manualmente' : 'Nenhum erro detectado'}`)
    
    return true
  } catch (error) {
    console.error('‚ùå [VERIFICA√á√ÉO] Erro ao verificar funcionalidades:', error)
    return false
  }
}

// Fun√ß√£o para verificar estado da aplica√ß√£o
function verificarEstadoAplicacao() {
  console.log('üîÑ [VERIFICA√á√ÉO] Verificando estado da aplica√ß√£o...')
  
  // Verificar se h√° campanhas carregadas
  const campanhas = document.querySelectorAll('[data-testid="campaign-item"]') || document.querySelectorAll('.campaign-item')
  console.log(`üìã [VERIFICA√á√ÉO] Campanhas carregadas: ${campanhas.length}`)
  
  // Verificar se h√° listas dispon√≠veis
  const listas = document.querySelectorAll('[data-testid="list-item"]') || document.querySelectorAll('.list-item')
  console.log(`üìù [VERIFICA√á√ÉO] Listas dispon√≠veis: ${listas.length}`)
  
  // Verificar status do WhatsApp
  const statusWhatsApp = document.querySelector('.whatsapp-status') || document.querySelector('[data-testid="whatsapp-status"]')
  if (statusWhatsApp) {
    const status = statusWhatsApp.textContent || statusWhatsApp.innerText
    console.log(`üì± [VERIFICA√á√ÉO] Status WhatsApp: ${status}`)
  }
  
  return true
}

// Fun√ß√£o principal de verifica√ß√£o
function verificarSistemaCompleto() {
  console.log('üöÄ [VERIFICA√á√ÉO] Iniciando verifica√ß√£o completa do sistema...')
  console.log('=' * 60)
  
  const resultados = {
    elementos: verificarElementos(),
    logs: verificarLogs(),
    funcionalidades: verificarFuncionalidades(),
    estado: verificarEstadoAplicacao()
  }
  
  console.log('=' * 60)
  console.log('üìä [VERIFICA√á√ÉO] RESUMO DOS RESULTADOS:')
  console.log(`‚úÖ Elementos da Interface: ${resultados.elementos ? 'OK' : 'FALHA'}`)
  console.log(`‚úÖ Logs do Sistema: ${resultados.logs ? 'OK' : 'FALHA'}`)
  console.log(`‚úÖ Funcionalidades JS: ${resultados.funcionalidades ? 'OK' : 'FALHA'}`)
  console.log(`‚úÖ Estado da Aplica√ß√£o: ${resultados.estado ? 'OK' : 'FALHA'}`)
  
  const sistemaOK = Object.values(resultados).every(resultado => resultado === true)
  
  if (sistemaOK) {
    console.log('üéâ [VERIFICA√á√ÉO] SISTEMA EST√ÅVEL - TODAS AS VERIFICA√á√ïES PASSARAM!')
    console.log('‚úÖ O sistema est√° funcionando perfeitamente!')
  } else {
    console.log('‚ö†Ô∏è [VERIFICA√á√ÉO] ALGUMAS VERIFICA√á√ïES FALHARAM!')
    console.log('üîç Verifique os itens marcados como FALHA acima.')
  }
  
  return sistemaOK
}

// Executar verifica√ß√£o
const sistemaEstavel = verificarSistemaCompleto()

// Exportar resultado para uso externo
window.sistemaVerificado = sistemaEstavel

console.log('üîç [VERIFICA√á√ÉO] Verifica√ß√£o conclu√≠da!')
console.log('üí° [DICA] Use window.sistemaVerificado para acessar o resultado da verifica√ß√£o')


















