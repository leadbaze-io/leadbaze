# Nginx Configuration for LeadFlow - Servla.com.br
# Optimized for production deployment

# Upstream for backend API (if needed)
upstream leadflow_backend {
    server 127.0.0.1:3001;
    keepalive 32;
}

# Main server block
server {
    listen 80;
    listen [::]:80;
    server_name _;
    
    # Document root
    root /var/www/leadflow;
    index index.html;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline' 'unsafe-eval'; img-src 'self' data: blob: https:; font-src 'self' data: https:;" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types 
        text/plain 
        text/css 
        text/xml 
        text/javascript 
        application/x-javascript 
        application/xml+rss 
        application/javascript 
        application/json
        application/xml
        image/svg+xml;
    
    # Cache static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp|avif)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        try_files $uri =404;
        access_log off;
    }
    
    # Cache HTML files
    location ~* \.html$ {
        expires 1h;
        add_header Cache-Control "public, max-age=3600";
        add_header Vary "Accept-Encoding";
    }
    
    # API proxy for backend
    location /api/ {
        proxy_pass http://leadflow_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
        proxy_send_timeout 300s;
        
        # CORS headers removidos - gerenciados pelo backend
        # O backend Node.js j√° configura CORS corretamente
    }
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
        add_header Cache-Control "no-cache, no-store, max-age=0";
    }
    
    # Favicon
    location = /favicon.ico {
        log_not_found off;
        access_log off;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # Robots.txt
    location = /robots.txt {
        log_not_found off;
        access_log off;
        return 200 "User-agent: *\nDisallow: /\n";
        add_header Content-Type text/plain;
    }
    
    # Handle React Router (SPA)
    location / {
        try_files $uri $uri/ /index.html;
        
        # Security for sensitive files
        location ~* \.(env|config|json|sql|log|md|txt)$ {
            deny all;
            return 404;
        }
        
        # Block access to hidden files
        location ~ /\. {
            deny all;
            return 404;
        }
    }
    
    # Error pages
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /usr/share/nginx/html;
    }
    
    # Logging
    access_log /var/log/nginx/leadflow_access.log;
    error_log /var/log/nginx/leadflow_error.log;
    
    # Apply rate limiting to API
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        # ... rest of API configuration
    }
    
    # Apply rate limiting to login
    location ~* /(login|signup|auth) {
        limit_req zone=login burst=5 nodelay;
    }
}

# HTTP to HTTPS redirect (uncomment when SSL is configured)
# server {
#     listen 80;
#     listen [::]:80;
#     server_name _;
#     return 301 https://$server_name$request_uri;
# }

# HTTPS server block (uncomment when SSL is configured)
# server {
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;
#     server_name _;
#     
#     # SSL configuration
#     ssl_certificate /etc/letsencrypt/live/your-domain.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/your-domain.com/privkey.pem;
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
#     ssl_prefer_server_ciphers off;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
#     
#     # Include the same configuration as above
#     # ... (copy all the location blocks and other settings)
# }

