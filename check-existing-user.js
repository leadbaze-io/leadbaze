// ==============================================
// SCRIPT PARA VERIFICAR USU√ÅRIO EXISTENTE
// ==============================================

import { createClient } from '@supabase/supabase-js'

// Configura√ß√£o do Supabase com Service Role Key
const supabaseUrl = 'https://lsvwjyhnnzeewuuuykmb.supabase.co'
const supabaseServiceKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImxzdndqeWhubnplZXd1dXV5a21iIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1NDMzNzg1NiwiZXhwIjoyMDY5OTEzODU2fQ.XeXm2_L1IBhytbQPpEnmUgygv22TOcu8SCWelHcW3Mk'

const supabase = createClient(supabaseUrl, supabaseServiceKey)

async function checkExistingUser() {
  const userId = '95ca9cd7-ecbf-445f-a48b-643927d27ccf'
  
  console.log('üîç Verificando usu√°rio existente...')
  console.log('=' .repeat(60))

  try {
    // 1. Consultar usu√°rio espec√≠fico
    console.log('\n1Ô∏è‚É£ Consultando usu√°rio espec√≠fico...')
    
    const { data: userData, error: userError } = await supabase.auth.admin.getUserById(userId)

    if (userError) {
      console.log('‚ùå Erro ao consultar usu√°rio:', userError.message)
      return
    }

    if (!userData || !userData.user) {
      console.log('‚ùå Usu√°rio n√£o encontrado')
      return
    }

    const user = userData.user
    console.log('‚úÖ Usu√°rio encontrado:')
    console.log('   üìß Email:', user.email)
    console.log('   üÜî ID:', user.id)
    console.log('   üìÖ Criado em:', user.created_at)
    console.log('   üìß Email confirmado:', user.email_confirmed_at ? 'Sim' : 'N√£o')
    console.log('   üîê √öltimo login:', user.last_sign_in_at || 'Nunca')

    // 2. Verificar senha
    console.log('\n2Ô∏è‚É£ Verificando senha...')
    
    if (user.encrypted_password) {
      console.log('   üîí Senha criptografada: SIM')
      console.log('   üîê Hash da senha:', user.encrypted_password.substring(0, 50) + '...')
      console.log('   ‚úÖ Este usu√°rio tem senha salva!')
    } else {
      console.log('   ‚ùå Senha criptografada: N√ÉO')
      console.log('   ‚ö†Ô∏è  Este usu√°rio N√ÉO tem senha salva!')
    }

    // 3. Verificar outros usu√°rios
    console.log('\n3Ô∏è‚É£ Verificando outros usu√°rios...')
    
    // Listar todos os usu√°rios (limitado a 10)
    const { data: allUsers, error: allUsersError } = await supabase.auth.admin.listUsers({
      page: 1,
      perPage: 10
    })

    if (allUsersError) {
      console.log('‚ùå Erro ao listar usu√°rios:', allUsersError.message)
    } else if (allUsers && allUsers.users) {
      console.log(`   üìä Total de usu√°rios encontrados: ${allUsers.users.length}`)
      
      let usersWithPassword = 0
      let usersWithoutPassword = 0
      
      allUsers.users.forEach((u, index) => {
        const hasPassword = u.encrypted_password ? 'SIM' : 'N√ÉO'
        if (u.encrypted_password) usersWithPassword++
        else usersWithoutPassword++
        
        console.log(`   ${index + 1}. ${u.email} - Senha: ${hasPassword}`)
      })
      
      console.log(`\n   üìà Estat√≠sticas:`)
      console.log(`   ‚úÖ Usu√°rios com senha: ${usersWithPassword}`)
      console.log(`   ‚ùå Usu√°rios sem senha: ${usersWithoutPassword}`)
    }

    // 4. Diagn√≥stico
    console.log('\n4Ô∏è‚É£ Diagn√≥stico do problema:')
    
    if (user.encrypted_password) {
      console.log('   ‚úÖ Este usu√°rio espec√≠fico tem senha salva')
      console.log('   üîç O problema pode ser espec√≠fico deste usu√°rio')
    } else {
      console.log('   ‚ùå Este usu√°rio n√£o tem senha salva')
      console.log('   üîç Poss√≠veis causas:')
      console.log('      1. Email confirmations desabilitados no Supabase')
      console.log('      2. SMTP n√£o configurado')
      console.log('      3. Usu√°rio criado via OAuth (Google, etc.)')
      console.log('      4. Bug no sistema de cria√ß√£o de usu√°rios')
    }

    // 5. Pr√≥ximos passos
    console.log('\n5Ô∏è‚É£ Pr√≥ximos passos:')
    console.log('   1. Configure SMTP no Supabase Dashboard')
    console.log('   2. Habilite email confirmations')
    console.log('   3. Teste criando uma nova conta')
    console.log('   4. Execute este script novamente para verificar')

  } catch (error) {
    console.error('‚ùå Erro geral:', error.message)
  }
}

// Executar script
checkExistingUser()

